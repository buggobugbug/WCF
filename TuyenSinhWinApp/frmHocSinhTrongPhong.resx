<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="phongThiBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="phongThiBindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>200, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>